# Load required libraries
library(dplyr)
library(ggplot2)
library(openxlsx)
library(zoo)

# Set working directory and read data
setwd("C:/Users/hp/Documents/Pproperty Price")
data <- read.csv('Property_price.csv')

# Check data types
str(data)

# Convert columns to factors
factor_columns <- c("REAL.ESTATE.ID", "YEAR", "MONTH", "SALE.DATE", "DATE", "AREA.ID", "BUILDING.NUMBER.ON.LAND", "TYPE.OF.PROPERTY", "NO.OF.ROOMS")
data[factor_columns] <- lapply(data[factor_columns], as.factor)

# Check the structure of the data
str(data)

# Check for duplicate REAL ESTATE IDs
duplicate_counts <- data %>%
  group_by(REAL.ESTATE.ID) %>%
  summarise(count = n())

duplicates <- duplicate_counts %>%
  filter(count > 1)

duplicates_data <- data %>%
  inner_join(duplicates, by = "REAL.ESTATE.ID")

# Print duplicate rows
if (nrow(duplicates_data) > 0) {
  print(duplicates_data)
}

# Plot average sale price by month
avg_price_by_month <- data %>%
  group_by(MONTH) %>%
  summarise(avg_price = mean(AMOUNT.PAID, na.rm = TRUE))

ggplot(avg_price_by_month, aes(x = MONTH, y = avg_price)) +
  geom_bar(stat = "identity", fill = "blue") +
  labs(title = "Average Sale Price by Month", x = "Month", y = "Average Sale Price")

# Convert SALE.DATE to Date type
data$SALE.DATE <- as.Date(data$SALE.DATE, format = "%m/%d/%Y")

# Plot average sale price against the complete date of sale
avg_price_by_date <- data %>%
  group_by(SALE.DATE) %>%
  summarise(avg_price = mean(AMOUNT.PAID, na.rm = TRUE))

ggplot(avg_price_by_date, aes(x = SALE.DATE, y = avg_price)) +
  geom_line(color = "blue") +
  labs(title = "Average Sale Price Over Time",
       x = "Sale Date",
       y = "Average Sale Price") +
  theme_minimal()

# Descriptive statistics for SQUARE.FOOTAGE and AMOUNT.PAID columns
summary(data[c("SQUARE.FOOTAGE", "AMOUNT.PAID")])

# Histogram for square footage and amount paid
ggplot(data, aes(x = SQUARE.FOOTAGE)) +
  geom_histogram(bins = 105, fill = "blue", color = "black") +
  labs(title = "Histogram of Square Footage", x = "Square Footage", y = "Frequency")

ggplot(data, aes(x = AMOUNT.PAID)) +
  geom_histogram(bins = 105, fill = "red", color = "black") +
  labs(title = "Histogram of Amount Paid", x = "Amount Paid", y = "Frequency")

# Calculate average price by area and property type
avg_price_by_area <- aggregate(AMOUNT.PAID ~ AREA.ID, data = data, mean)
avg_price_by_type <- aggregate(AMOUNT.PAID ~ TYPE.OF.PROPERTY, data = data, mean)

# Create bar plots for average price by area and property type
avg_price_by_area_plot <- ggplot(avg_price_by_area, aes(x = reorder(AREA.ID, AMOUNT.PAID), y = AMOUNT.PAID)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Average Sale Price by Area", x = "Area ID", y = "Average Sale Price") +
  theme(axis.text.x = element_text(angle = 0, hjust = 1))

avg_price_by_type_plot <- ggplot(avg_price_by_type, aes(x = reorder(TYPE.OF.PROPERTY, AMOUNT.PAID), y = AMOUNT.PAID)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Average Sale Price by Property Type", x = "Property Type", y = "Average Sale Price") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Print bar plots
print(avg_price_by_area_plot)
print(avg_price_by_type_plot)

# Calculate average price by number of rooms
avg_price_by_rooms <- aggregate(AMOUNT.PAID ~ NO.OF.ROOMS, data = data, mean)

# Create a pivot table-like summary for average amount paid by number of rooms
pivot_summary <- data %>%
  group_by(NO.OF.ROOMS) %>%
  summarize(Avg_Amount_Paid = mean(AMOUNT.PAID, na.rm = TRUE),
            Count = n())

# Print the pivot summary
print(pivot_summary)

# Create a bar chart
ggplot(pivot_summary, aes(x = NO.OF.ROOMS, y = Avg_Amount_Paid)) +
  geom_col(fill = "skyblue", width = 0.6) +  # Use geom_col() for bar chart
  labs(
    title = "Average Amount Paid by Number of Rooms",
    x = "Number of Ro
